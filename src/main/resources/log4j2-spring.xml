<?xml version="1.0" encoding="UTF-8"?>
 
<!-- 레퍼런스 참조 83.1 Configure Logback for Logging --> 
<!-- classpath 루트에 logback-spring.xml 또는 logback.xml을 넣으면 Boot에서 제공하는 템플릿 기능을 활용하기 위해 해당 경로에서 선택된다. -->
<!-- Spring Boot는 다음 예시와 같이 레벨을 설정할 경우 포함할 수 있는 기본 기본 구성을 제공한다. -->
<!--아래 코드 참고 -->

<!-- <configuration>
	<include resource="org/springframework/boot/logging/logback/base.xml"/>
	<logger name="com.camel.camel_boot_ex" level="DEBUG"/>
</configuration>  -->

<!-- 
	스프링 부트 jar 에서 base.xml을 보면 LoggingSystem이 생성하는 유용한 시스템 속성을 사용할 수 있다.

	${PID}: 현재 프로세스 ID입니다.
	${LOG_FILE}: 로깅 여부.Boot의 외부 구성에서 파일이 설정되었다.
	${LOG_PATH}: boot의 외부 구성에서 logging.path(로그 파일을 저장할 디렉터리를 나타냄)가 설정되었는지 여부.
	${LOG_EXCEPTION_CONVERSION_WORD}: boot의 외부 구성에 logging.exception-conversion-word가 설정되었는지 여부.
 -->
 
 <!-- log4j2 설정  -->
<Configuration>
    <Appenders>
        <Console name="console" target="SYSTEM_OUT">
            <PatternLayout pattern="%d %5p [%c] %m%n" />
        </Console>
    </Appenders>
    <Loggers>
        <Logger name="java.sql" level="DEBUG" additivity="false">
            <AppenderRef ref="console" />
        </Logger>
        <Logger name="jdbc.sqltiming" level="DEBUG" additivity="false">
            <AppenderRef ref="console" />
        </Logger>
        <Logger name="org.springframework" level="INFO" additivity="false">
            <AppenderRef ref="console" />
        </Logger>
         <Logger name="com.camel.camel_boot_ex" level="debug">
        </Logger>
    </Loggers>
</Configuration>